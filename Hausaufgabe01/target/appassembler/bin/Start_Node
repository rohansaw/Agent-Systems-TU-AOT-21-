#!/bin/sh
# ----------------------------------------------------------------------------
#  Copyright 2001-2006 The Apache Software Foundation.
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.
# ----------------------------------------------------------------------------
#
#   Copyright (c) 2001-2006 The Apache Software Foundation.  All rights
#   reserved.


# resolve links - $0 may be a softlink
PRG="$0"

while [ -h "$PRG" ]; do
  ls=`ls -ld "$PRG"`
  link=`expr "$ls" : '.*-> \(.*\)$'`
  if expr "$link" : '/.*' > /dev/null; then
    PRG="$link"
  else
    PRG=`dirname "$PRG"`/"$link"
  fi
done

PRGDIR=`dirname "$PRG"`
BASEDIR=`cd "$PRGDIR/.." >/dev/null; pwd`



# OS specific support.  $var _must_ be set to either true or false.
cygwin=false;
darwin=false;
case "`uname`" in
  CYGWIN*) cygwin=true ;;
  Darwin*) darwin=true
           if [ -z "$JAVA_VERSION" ] ; then
             JAVA_VERSION="CurrentJDK"
           else
             echo "Using Java version: $JAVA_VERSION"
           fi
		   if [ -z "$JAVA_HOME" ]; then
		      if [ -x "/usr/libexec/java_home" ]; then
			      JAVA_HOME=`/usr/libexec/java_home`
			  else
			      JAVA_HOME=/System/Library/Frameworks/JavaVM.framework/Versions/${JAVA_VERSION}/Home
			  fi
           fi       
           ;;
esac

if [ -z "$JAVA_HOME" ] ; then
  if [ -r /etc/gentoo-release ] ; then
    JAVA_HOME=`java-config --jre-home`
  fi
fi

# For Cygwin, ensure paths are in UNIX format before anything is touched
if $cygwin ; then
  [ -n "$JAVA_HOME" ] && JAVA_HOME=`cygpath --unix "$JAVA_HOME"`
  [ -n "$CLASSPATH" ] && CLASSPATH=`cygpath --path --unix "$CLASSPATH"`
fi

# If a specific java binary isn't specified search for the standard 'java' binary
if [ -z "$JAVACMD" ] ; then
  if [ -n "$JAVA_HOME"  ] ; then
    if [ -x "$JAVA_HOME/jre/sh/java" ] ; then
      # IBM's JDK on AIX uses strange locations for the executables
      JAVACMD="$JAVA_HOME/jre/sh/java"
    else
      JAVACMD="$JAVA_HOME/bin/java"
    fi
  else
    JAVACMD=`which java`
  fi
fi

if [ ! -x "$JAVACMD" ] ; then
  echo "Error: JAVA_HOME is not defined correctly." 1>&2
  echo "  We cannot execute $JAVACMD" 1>&2
  exit 1
fi

if [ -z "$REPO" ]
then
  REPO="$BASEDIR"/repo
fi

CLASSPATH=$CLASSPATH_PREFIX:"$BASEDIR"/etc:"$REPO"/agentCore-5.2.4.jar:"$REPO"/slf4j-log4j12-1.7.10.jar:"$REPO"/slf4j-api-1.7.10.jar:"$REPO"/log4j-1.2.17.jar:"$REPO"/gateway-5.2.4.jar:"$REPO"/activemq-client-5.12.1.jar:"$REPO"/geronimo-jms_1.1_spec-1.1.1.jar:"$REPO"/hawtbuf-1.11.jar:"$REPO"/geronimo-j2ee-management_1.1_spec-1.0.1.jar:"$REPO"/activemq-broker-5.12.1.jar:"$REPO"/activemq-openwire-legacy-5.12.1.jar:"$REPO"/activemq-kahadb-store-5.12.1.jar:"$REPO"/activemq-protobuf-1.1.jar:"$REPO"/commons-net-3.3.jar:"$REPO"/agentCoreAPI-5.2.4.jar:"$REPO"/SimpleSpaceCore-2.6.4.jar:"$REPO"/GetterSetterFinder-1.1.1.jar:"$REPO"/FieldUtil-1.0.jar:"$REPO"/spring-core-4.3.12.RELEASE.jar:"$REPO"/commons-logging-1.2.jar:"$REPO"/spring-context-4.3.12.RELEASE.jar:"$REPO"/spring-aop-4.3.12.RELEASE.jar:"$REPO"/spring-beans-4.3.12.RELEASE.jar:"$REPO"/spring-expression-4.3.12.RELEASE.jar:"$REPO"/webServer-5.2.1.jar:"$REPO"/jetty-deploy-8.1.17.v20150415.jar:"$REPO"/jetty-xml-8.1.17.v20150415.jar:"$REPO"/jetty-webapp-8.1.17.v20150415.jar:"$REPO"/jetty-servlet-8.1.17.v20150415.jar:"$REPO"/jetty-security-8.1.17.v20150415.jar:"$REPO"/jetty-server-8.1.17.v20150415.jar:"$REPO"/jetty-continuation-8.1.17.v20150415.jar:"$REPO"/jetty-jsp-8.1.17.v20150415.jar:"$REPO"/javax.servlet.jsp-2.2.0.v201112011158.jar:"$REPO"/javax.servlet-3.0.0.v201112011016.jar:"$REPO"/org.apache.jasper.glassfish-2.2.2.v201112011158.jar:"$REPO"/javax.servlet.jsp.jstl-1.2.0.v201105211821.jar:"$REPO"/org.apache.taglibs.standard.glassfish-1.2.0.v201112081803.jar:"$REPO"/javax.el-2.2.0.v201108011116.jar:"$REPO"/com.sun.el-2.2.0.v201108011116.jar:"$REPO"/org.eclipse.jdt.core-3.7.1.jar:"$REPO"/jetty-websocket-8.1.17.v20150415.jar:"$REPO"/jetty-util-8.1.17.v20150415.jar:"$REPO"/jetty-io-8.1.17.v20150415.jar:"$REPO"/jetty-http-8.1.17.v20150415.jar:"$REPO"/jiac-aot-gridworld-0.1.0.jar

# For Cygwin, switch paths to Windows format before running java
if $cygwin; then
  [ -n "$CLASSPATH" ] && CLASSPATH=`cygpath --path --windows "$CLASSPATH"`
  [ -n "$JAVA_HOME" ] && JAVA_HOME=`cygpath --path --windows "$JAVA_HOME"`
  [ -n "$HOME" ] && HOME=`cygpath --path --windows "$HOME"`
  [ -n "$BASEDIR" ] && BASEDIR=`cygpath --path --windows "$BASEDIR"`
  [ -n "$REPO" ] && REPO=`cygpath --path --windows "$REPO"`
fi

exec "$JAVACMD" $JAVA_OPTS  \
  -classpath "$CLASSPATH" \
  -Dapp.name="Start_Node" \
  -Dapp.pid="$$" \
  -Dapp.repo="$REPO" \
  -Dapp.home="$BASEDIR" \
  -Dbasedir="$BASEDIR" \
  de.dailab.jiactng.aot.gridworld.StartNode \
  "$@"
