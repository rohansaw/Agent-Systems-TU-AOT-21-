12 25 16 5 1 5
.w..........
............
...###o.....
............
............
.......#....
............
...o........
...#........
.....w......
............
............
.o........w.
............
............
....####....
.w..#o......
....#.......
....#.......
....#o......
............
............
............
.......w....
............
o1 7 3 1 6 10 0
o2 2 6 8 16 11 1
o3 1 12 1 12 12 1
o4 5 19 2 10 13 2
o5 5 16 5 15 20 3
w1 0 1 999
w2 9 5 999
w3 10 12 999
w4 1 16 999
w5 7 24 999

Dieses Grid wurde mit einem Python Script generiert, anhand der uns schon zu verfügung stehenden grids. Aus den Daten dieser wurde eine csv
datei generiert, aus der man anhand linearen Regression, die Spielinformationen berechnen konnte. Die haben wir anschließend
benutzt um zuerst die Anzahl Runden unseres grids zu wählen, dann die Anzahl der Obstacles und zu letzt die Anzahl der orders.
Unsere Worker können noch nicht optimal mit dem Grid umgehen, wir hatten zum Ende jedoch wenigstens einen positiven Reward.
Da die Worker aktuell mit wenigen Hindernissen auf einmal aktuell Probleme haben, ist es uns nicht sinnvoll erschienen ein grid mit nur sehr wenigen
oder gar keinen obstacles zu erstellen, da diese zu einfach lösbar. Wir fanden daher den Gedanken ein grid zufalls generieren zu lassen ganz spannend.